diff --git a/CMakeLists.txt b/CMakeLists.txt
index efc65dc..994d91b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -14,9 +14,14 @@ project(foxglove_bridge LANGUAGES CXX VERSION 0.8.5)
 set(CMAKE_CXX_STANDARD 17)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 
+if(MSVC)
+    set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS TRUE)
+    set(BUILD_SHARED_LIBS TRUE)
+endif()
+
 macro(enable_strict_compiler_warnings target)
   if (MSVC)
-    target_compile_options(${target} PRIVATE /WX /W4)
+    target_compile_options(${target} PRIVATE /W4)
   elseif(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
     target_compile_options(${target} PRIVATE -Wall -Wextra -Wpedantic -Werror -Wold-style-cast -Wfloat-equal -Wmost -Wunused-exception-parameter)
   else()
@@ -47,7 +52,7 @@ add_library(foxglove_bridge_base SHARED
   foxglove_bridge_base/src/test/test_client.cpp
 )
 target_include_directories(foxglove_bridge_base
-  PUBLIC
+  SYSTEM PUBLIC
     $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/foxglove_bridge_base/include>
     $<INSTALL_INTERFACE:include>
 )
@@ -62,7 +67,11 @@ if(nlohmann_json_FOUND)
 else()
   message(STATUS "nlohmann_json not found, will search at compile time")
 endif()
-enable_strict_compiler_warnings(foxglove_bridge_base)
+# enable_strict_compiler_warnings(foxglove_bridge_base)
+target_compile_definitions(foxglove_bridge_base PUBLIC _WEBSOCKETPP_CPP11_STL_)
+
+set(ENV{ROS_VERSION} 2)
+set(ENV{ROS_DISTRO} humble)
 
 message(STATUS "ROS_VERSION: " $ENV{ROS_VERSION})
 message(STATUS "ROS_DISTRO: " $ENV{ROS_DISTRO})
diff --git a/ros2_foxglove_bridge/src/generic_client.cpp b/ros2_foxglove_bridge/src/generic_client.cpp
index b3a4eca2..235a1874 100644
--- a/ros2_foxglove_bridge/src/generic_client.cpp
+++ b/ros2_foxglove_bridge/src/generic_client.cpp
@@ -126,7 +126,8 @@ GenericClient::GenericClient(rclcpp::node_interfaces::NodeBaseInterface* nodeBas
 
   // get_typesupport_handle is deprecated since rclcpp 25.0.0
   // (https://github.com/ros2/rclcpp/pull/2209)
-#if RCLCPP_VERSION_GTE(25, 0, 0)
+// Hardcoding this to false as we are in humble, hardcode to true on other distros
+#if false
   _requestTypeSupportHdl =
     rclcpp::get_message_typesupport_handle(requestTypeName, TYPESUPPORT_LIB_NAME, *_typeSupportLib);
   _responseTypeSupportHdl = rclcpp::get_message_typesupport_handle(
diff --git a/ros2_foxglove_bridge/src/message_definition_cache.cpp b/ros2_foxglove_bridge/src/message_definition_cache.cpp
index 262c482a..5598182d 100644
--- a/ros2_foxglove_bridge/src/message_definition_cache.cpp
+++ b/ros2_foxglove_bridge/src/message_definition_cache.cpp
@@ -234,7 +234,7 @@ const MessageSpec& MessageDefinitionCache::load_message_spec(
   }
 
   // Read the file
-  const std::string full_path = share_dir + std::filesystem::path::preferred_separator + *it;
+  const std::string full_path = (std::filesystem::path(share_dir) / *it).string();
   std::ifstream file{full_path};
   if (!file.good()) {
     throw DefinitionNotFoundError(definition_identifier.package_resource_name);
