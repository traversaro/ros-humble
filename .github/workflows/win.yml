jobs:
  stage_0_job_0:
    name: mutex ament-package ament-cmake-core ros-workspace ros-environment
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs: []
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros2-distro-mutex ros-humble-ament-package ros-humble-ament-cmake-core
          ros-humble-ros-workspace ros-humble-ros-environment
        PYTHONUNBUFFERED: 1
      name: Build ros2-distro-mutex ros-humble-ament-package ros-humble-ament-cmake-core
        ros-humble-ros-workspace ros-humble-ros-environment
  stage_1_job_1:
    name: ament-lint ament-cmake-python gtest-vendor ament-cmake-libraries ament-cmake-include-directories
      ament-cmake-export-libraries ament-cmake-version ament-cmake-export-link-flags
      ament-cmake-export-include-directories ament-cmake-export-definitions
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_0_job_0
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-lint ros-humble-ament-cmake-python ros-humble-gtest-vendor
          ros-humble-ament-cmake-libraries ros-humble-ament-cmake-include-directories
          ros-humble-ament-cmake-export-libraries ros-humble-ament-cmake-version ros-humble-ament-cmake-export-link-flags
          ros-humble-ament-cmake-export-include-directories ros-humble-ament-cmake-export-definitions
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-lint ros-humble-ament-cmake-python ros-humble-gtest-vendor
        ros-humble-ament-cmake-libraries ros-humble-ament-cmake-include-directories
        ros-humble-ament-cmake-export-libraries ros-humble-ament-cmake-version ros-humble-ament-cmake-export-link-flags
        ros-humble-ament-cmake-export-include-directories ros-humble-ament-cmake-export-definitions
  stage_1_job_2:
    name: ament-pycodestyle ament-cppcheck osrf-pycommon google-benchmark-vendor osrf-testing-tools-cpp
      test-interface-files fastcdr iceoryx-hoofs urdfdom-headers ruckig
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_0_job_0
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-pycodestyle ros-humble-ament-cppcheck ros-humble-osrf-pycommon
          ros-humble-google-benchmark-vendor ros-humble-osrf-testing-tools-cpp ros-humble-test-interface-files
          ros-humble-fastcdr ros-humble-iceoryx-hoofs ros-humble-urdfdom-headers ros-humble-ruckig
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-pycodestyle ros-humble-ament-cppcheck ros-humble-osrf-pycommon
        ros-humble-google-benchmark-vendor ros-humble-osrf-testing-tools-cpp ros-humble-test-interface-files
        ros-humble-fastcdr ros-humble-iceoryx-hoofs ros-humble-urdfdom-headers ros-humble-ruckig
  stage_1_job_3:
    name: octomap ompl gtsam cartographer sick-safetyscanners-base libcamera apriltag
      apriltag-mit visp
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_0_job_0
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-octomap ros-humble-ompl ros-humble-gtsam ros-humble-cartographer
          ros-humble-sick-safetyscanners-base ros-humble-libcamera ros-humble-apriltag
          ros-humble-apriltag-mit ros-humble-visp
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-octomap ros-humble-ompl ros-humble-gtsam ros-humble-cartographer
        ros-humble-sick-safetyscanners-base ros-humble-libcamera ros-humble-apriltag
        ros-humble-apriltag-mit ros-humble-visp
  stage_2_job_4:
    name: ament-flake8 ament-cmake-test ament-cmake-target-dependencies ament-cmake-export-targets
      ament-cmake-export-interfaces ament-cmake-export-dependencies gmock-vendor iceoryx-posh
      backward-ros mrt-cmake-modules
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_1_job_1
    - stage_1_job_2
    - stage_1_job_3
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-flake8 ros-humble-ament-cmake-test ros-humble-ament-cmake-target-dependencies
          ros-humble-ament-cmake-export-targets ros-humble-ament-cmake-export-interfaces
          ros-humble-ament-cmake-export-dependencies ros-humble-gmock-vendor ros-humble-iceoryx-posh
          ros-humble-backward-ros ros-humble-mrt-cmake-modules
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-flake8 ros-humble-ament-cmake-test ros-humble-ament-cmake-target-dependencies
        ros-humble-ament-cmake-export-targets ros-humble-ament-cmake-export-interfaces
        ros-humble-ament-cmake-export-dependencies ros-humble-gmock-vendor ros-humble-iceoryx-posh
        ros-humble-backward-ros ros-humble-mrt-cmake-modules
  stage_3_job_5:
    name: ament-pep257 ament-cmake-gtest ament-lint-auto ament-cmake-google-benchmark
      ament-cmake-pytest iceoryx-binding-c ament-cmake-catch2 lanelet2-core ament-mypy
      ament-cmake-vendor-package
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_2_job_4
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-pep257 ros-humble-ament-cmake-gtest ros-humble-ament-lint-auto
          ros-humble-ament-cmake-google-benchmark ros-humble-ament-cmake-pytest ros-humble-iceoryx-binding-c
          ros-humble-ament-cmake-catch2 ros-humble-lanelet2-core ros-humble-ament-mypy
          ros-humble-ament-cmake-vendor-package
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-pep257 ros-humble-ament-cmake-gtest ros-humble-ament-lint-auto
        ros-humble-ament-cmake-google-benchmark ros-humble-ament-cmake-pytest ros-humble-iceoryx-binding-c
        ros-humble-ament-cmake-catch2 ros-humble-lanelet2-core ros-humble-ament-mypy
        ros-humble-ament-cmake-vendor-package
  stage_3_job_6:
    name: ament-cmake-nose
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_2_job_4
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-cmake-nose
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-cmake-nose
  stage_4_job_7:
    name: ament-copyright ament-cmake-gen-version-h ament-cmake-gmock cyclonedds lanelet2-io
      lanelet2-traffic-rules lanelet2-maps tf-transformations
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_3_job_5
    - stage_3_job_6
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-copyright ros-humble-ament-cmake-gen-version-h
          ros-humble-ament-cmake-gmock ros-humble-cyclonedds ros-humble-lanelet2-io
          ros-humble-lanelet2-traffic-rules ros-humble-lanelet2-maps ros-humble-tf-transformations
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-copyright ros-humble-ament-cmake-gen-version-h
        ros-humble-ament-cmake-gmock ros-humble-cyclonedds ros-humble-lanelet2-io
        ros-humble-lanelet2-traffic-rules ros-humble-lanelet2-maps ros-humble-tf-transformations
  stage_5_job_8:
    name: ament-lint-cmake ament-cmake ament-xmllint ament-cpplint ament-index-python
      domain-coordinator generate-parameter-library-py ament-clang-format lanelet2-projection
      ament-pclint
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_4_job_7
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-lint-cmake ros-humble-ament-cmake ros-humble-ament-xmllint
          ros-humble-ament-cpplint ros-humble-ament-index-python ros-humble-domain-coordinator
          ros-humble-generate-parameter-library-py ros-humble-ament-clang-format ros-humble-lanelet2-projection
          ros-humble-ament-pclint
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-lint-cmake ros-humble-ament-cmake ros-humble-ament-xmllint
        ros-humble-ament-cpplint ros-humble-ament-index-python ros-humble-domain-coordinator
        ros-humble-generate-parameter-library-py ros-humble-ament-clang-format ros-humble-lanelet2-projection
        ros-humble-ament-pclint
  stage_5_job_9:
    name: lanelet2-routing
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_4_job_7
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-lanelet2-routing
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-lanelet2-routing
  stage_6_job_10:
    name: ament-cmake-lint-cmake uncrustify-vendor launch rosidl-cli rpyutils yaml-cpp-vendor
      pybind11-vendor tinyxml-vendor tinyxml2-vendor tl-expected
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_5_job_8
    - stage_5_job_9
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-cmake-lint-cmake ros-humble-uncrustify-vendor
          ros-humble-launch ros-humble-rosidl-cli ros-humble-rpyutils ros-humble-yaml-cpp-vendor
          ros-humble-pybind11-vendor ros-humble-tinyxml-vendor ros-humble-tinyxml2-vendor
          ros-humble-tl-expected
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-cmake-lint-cmake ros-humble-uncrustify-vendor ros-humble-launch
        ros-humble-rosidl-cli ros-humble-rpyutils ros-humble-yaml-cpp-vendor ros-humble-pybind11-vendor
        ros-humble-tinyxml-vendor ros-humble-tinyxml2-vendor ros-humble-tl-expected
  stage_6_job_11:
    name: tcb-span libcurl-vendor xacro moveit-resources-panda-description random-numbers
      eigen-stl-containers moveit-resources-pr2-description angles zstd-vendor moveit-resources-fanuc-description
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_5_job_8
    - stage_5_job_9
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-tcb-span ros-humble-libcurl-vendor ros-humble-xacro
          ros-humble-moveit-resources-panda-description ros-humble-random-numbers
          ros-humble-eigen-stl-containers ros-humble-moveit-resources-pr2-description
          ros-humble-angles ros-humble-zstd-vendor ros-humble-moveit-resources-fanuc-description
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-tcb-span ros-humble-libcurl-vendor ros-humble-xacro ros-humble-moveit-resources-panda-description
        ros-humble-random-numbers ros-humble-eigen-stl-containers ros-humble-moveit-resources-pr2-description
        ros-humble-angles ros-humble-zstd-vendor ros-humble-moveit-resources-fanuc-description
  stage_6_job_12:
    name: sqlite3-vendor shared-queues-vendor ament-cmake-auto ros2-control-test-assets
      gazebo-dev sdl2-vendor urg-c ament-black ur-client-library dynamixel-sdk
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_5_job_8
    - stage_5_job_9
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-sqlite3-vendor ros-humble-shared-queues-vendor
          ros-humble-ament-cmake-auto ros-humble-ros2-control-test-assets ros-humble-gazebo-dev
          ros-humble-sdl2-vendor ros-humble-urg-c ros-humble-ament-black ros-humble-ur-client-library
          ros-humble-dynamixel-sdk
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-sqlite3-vendor ros-humble-shared-queues-vendor ros-humble-ament-cmake-auto
        ros-humble-ros2-control-test-assets ros-humble-gazebo-dev ros-humble-sdl2-vendor
        ros-humble-urg-c ros-humble-ament-black ros-humble-ur-client-library ros-humble-dynamixel-sdk
  stage_6_job_13:
    name: lanelet2-matching lanelet2-validation zenoh-cpp-vendor geometry-tutorials
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_5_job_8
    - stage_5_job_9
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-lanelet2-matching ros-humble-lanelet2-validation
          ros-humble-zenoh-cpp-vendor ros-humble-geometry-tutorials
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-lanelet2-matching ros-humble-lanelet2-validation ros-humble-zenoh-cpp-vendor
        ros-humble-geometry-tutorials
  stage_7_job_14:
    name: ament-cmake-copyright ament-uncrustify launch-yaml launch-xml mcap-vendor
      moveit-resources-prbt-support lanelet2-python
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_6_job_10
    - stage_6_job_11
    - stage_6_job_12
    - stage_6_job_13
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-cmake-copyright ros-humble-ament-uncrustify
          ros-humble-launch-yaml ros-humble-launch-xml ros-humble-mcap-vendor ros-humble-moveit-resources-prbt-support
          ros-humble-lanelet2-python
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-cmake-copyright ros-humble-ament-uncrustify ros-humble-launch-yaml
        ros-humble-launch-xml ros-humble-mcap-vendor ros-humble-moveit-resources-prbt-support
        ros-humble-lanelet2-python
  stage_8_job_15:
    name: ament-cmake-xmllint ament-cmake-uncrustify ament-cmake-pep257 ament-cmake-flake8
      ament-cmake-cpplint ament-cmake-cppcheck launch-testing eigen3-cmake-module
      ament-cmake-clang-format ament-cmake-mypy
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_7_job_14
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-cmake-xmllint ros-humble-ament-cmake-uncrustify
          ros-humble-ament-cmake-pep257 ros-humble-ament-cmake-flake8 ros-humble-ament-cmake-cpplint
          ros-humble-ament-cmake-cppcheck ros-humble-launch-testing ros-humble-eigen3-cmake-module
          ros-humble-ament-cmake-clang-format ros-humble-ament-cmake-mypy
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-cmake-xmllint ros-humble-ament-cmake-uncrustify
        ros-humble-ament-cmake-pep257 ros-humble-ament-cmake-flake8 ros-humble-ament-cmake-cpplint
        ros-humble-ament-cmake-cppcheck ros-humble-launch-testing ros-humble-eigen3-cmake-module
        ros-humble-ament-cmake-clang-format ros-humble-ament-cmake-mypy
  stage_8_job_16:
    name: ament-cmake-pclint
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_7_job_14
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-cmake-pclint
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-cmake-pclint
  stage_9_job_17:
    name: ament-lint-common foonathan-memory-vendor rviz-ogre-vendor rviz-assimp-vendor
      ignition-cmake2-vendor autoware-lint-common ament-cmake-black
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_8_job_15
    - stage_8_job_16
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ament-lint-common ros-humble-foonathan-memory-vendor
          ros-humble-rviz-ogre-vendor ros-humble-rviz-assimp-vendor ros-humble-ignition-cmake2-vendor
          ros-humble-autoware-lint-common ros-humble-ament-cmake-black
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ament-lint-common ros-humble-foonathan-memory-vendor
        ros-humble-rviz-ogre-vendor ros-humble-rviz-assimp-vendor ros-humble-ignition-cmake2-vendor
        ros-humble-autoware-lint-common ros-humble-ament-cmake-black
  stage_10_job_18:
    name: python-cmake-module performance-test-fixture ament-cmake-ros rosidl-adapter
      rosidl-typesupport-interface fastrtps-cmake-module fastrtps rti-connext-dds-cmake-module
      rmw-implementation-cmake ament-index-cpp
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_9_job_17
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-python-cmake-module ros-humble-performance-test-fixture
          ros-humble-ament-cmake-ros ros-humble-rosidl-adapter ros-humble-rosidl-typesupport-interface
          ros-humble-fastrtps-cmake-module ros-humble-fastrtps ros-humble-rti-connext-dds-cmake-module
          ros-humble-rmw-implementation-cmake ros-humble-ament-index-cpp
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-python-cmake-module ros-humble-performance-test-fixture
        ros-humble-ament-cmake-ros ros-humble-rosidl-adapter ros-humble-rosidl-typesupport-interface
        ros-humble-fastrtps-cmake-module ros-humble-fastrtps ros-humble-rti-connext-dds-cmake-module
        ros-humble-rmw-implementation-cmake ros-humble-ament-index-cpp
  stage_10_job_19:
    name: spdlog-vendor orocos-kdl-vendor python-qt-binding moveit-common smclib ignition-math6-vendor
      tango-icons-vendor keyboard-handler autoware-cmake asio-cmake-module
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_9_job_17
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-spdlog-vendor ros-humble-orocos-kdl-vendor ros-humble-python-qt-binding
          ros-humble-moveit-common ros-humble-smclib ros-humble-ignition-math6-vendor
          ros-humble-tango-icons-vendor ros-humble-keyboard-handler ros-humble-autoware-cmake
          ros-humble-asio-cmake-module
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-spdlog-vendor ros-humble-orocos-kdl-vendor ros-humble-python-qt-binding
        ros-humble-moveit-common ros-humble-smclib ros-humble-ignition-math6-vendor
        ros-humble-tango-icons-vendor ros-humble-keyboard-handler ros-humble-autoware-cmake
        ros-humble-asio-cmake-module
  stage_10_job_20:
    name: apex-test-tools mimick-vendor
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_9_job_17
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-apex-test-tools ros-humble-mimick-vendor
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-apex-test-tools ros-humble-mimick-vendor
  stage_11_job_21:
    name: launch-testing-ament-cmake rosidl-parser tracetools console-bridge-vendor
      urdf-parser-plugin python-orocos-kdl-vendor resource-retriever qt-gui tracetools-image-pipeline
      qt-gui-py-common
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_10_job_18
    - stage_10_job_19
    - stage_10_job_20
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-launch-testing-ament-cmake ros-humble-rosidl-parser
          ros-humble-tracetools ros-humble-console-bridge-vendor ros-humble-urdf-parser-plugin
          ros-humble-python-orocos-kdl-vendor ros-humble-resource-retriever ros-humble-qt-gui
          ros-humble-tracetools-image-pipeline ros-humble-qt-gui-py-common
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-launch-testing-ament-cmake ros-humble-rosidl-parser ros-humble-tracetools
        ros-humble-console-bridge-vendor ros-humble-urdf-parser-plugin ros-humble-python-orocos-kdl-vendor
        ros-humble-resource-retriever ros-humble-qt-gui ros-humble-tracetools-image-pipeline
        ros-humble-qt-gui-py-common
  stage_11_job_22:
    name: qt-dotgraph autoware-utils-math
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_10_job_18
    - stage_10_job_19
    - stage_10_job_20
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-qt-dotgraph ros-humble-autoware-utils-math
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-qt-dotgraph ros-humble-autoware-utils-math
  stage_12_job_23:
    name: rcutils rosidl-cmake urdfdom rviz-rendering rosidl-runtime-c rcpputils rviz-rendering-tests
      rosidl-generator-dds-idl
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_11_job_21
    - stage_11_job_22
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rcutils ros-humble-rosidl-cmake ros-humble-urdfdom
          ros-humble-rviz-rendering ros-humble-rosidl-runtime-c ros-humble-rcpputils
          ros-humble-rviz-rendering-tests ros-humble-rosidl-generator-dds-idl
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rcutils ros-humble-rosidl-cmake ros-humble-urdfdom ros-humble-rviz-rendering
        ros-humble-rosidl-runtime-c ros-humble-rcpputils ros-humble-rviz-rendering-tests
        ros-humble-rosidl-generator-dds-idl
  stage_13_job_24:
    name: rosidl-runtime-cpp rosidl-generator-c rmw rosidl-typesupport-introspection-c
      libyaml-vendor rcl-logging-interface class-loader
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_12_job_23
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rosidl-runtime-cpp ros-humble-rosidl-generator-c
          ros-humble-rmw ros-humble-rosidl-typesupport-introspection-c ros-humble-libyaml-vendor
          ros-humble-rcl-logging-interface ros-humble-class-loader
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rosidl-runtime-cpp ros-humble-rosidl-generator-c ros-humble-rmw
        ros-humble-rosidl-typesupport-introspection-c ros-humble-libyaml-vendor ros-humble-rcl-logging-interface
        ros-humble-class-loader
  stage_14_job_25:
    name: rosidl-generator-cpp rosidl-typesupport-introspection-cpp rcl-yaml-param-parser
      rcl-logging-spdlog pluginlib rosidl-typesupport-fastrtps-cpp urdf qt-gui-cpp
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_13_job_24
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rosidl-generator-cpp ros-humble-rosidl-typesupport-introspection-cpp
          ros-humble-rcl-yaml-param-parser ros-humble-rcl-logging-spdlog ros-humble-pluginlib
          ros-humble-rosidl-typesupport-fastrtps-cpp ros-humble-urdf ros-humble-qt-gui-cpp
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rosidl-generator-cpp ros-humble-rosidl-typesupport-introspection-cpp
        ros-humble-rcl-yaml-param-parser ros-humble-rcl-logging-spdlog ros-humble-pluginlib
        ros-humble-rosidl-typesupport-fastrtps-cpp ros-humble-urdf ros-humble-qt-gui-cpp
  stage_15_job_26:
    name: rosidl-typesupport-fastrtps-c kdl-parser velodyne-description turtlebot3-description
      rosidl-typesupport-c rmw-zenoh-cpp rosidl-typesupport-cpp rosidl-generator-py
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_14_job_25
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rosidl-typesupport-fastrtps-c ros-humble-kdl-parser
          ros-humble-velodyne-description ros-humble-turtlebot3-description ros-humble-rosidl-typesupport-c
          ros-humble-rmw-zenoh-cpp ros-humble-rosidl-typesupport-cpp ros-humble-rosidl-generator-py
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rosidl-typesupport-fastrtps-c ros-humble-kdl-parser ros-humble-velodyne-description
        ros-humble-turtlebot3-description ros-humble-rosidl-typesupport-c ros-humble-rmw-zenoh-cpp
        ros-humble-rosidl-typesupport-cpp ros-humble-rosidl-generator-py
  stage_16_job_27:
    name: rosidl-default-runtime rosidl-default-generators unique-identifier-msgs
      builtin-interfaces rmw-dds-common lifecycle-msgs std-srvs autoware-common-msgs
      system-modes-msgs
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_15_job_26
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rosidl-default-runtime ros-humble-rosidl-default-generators
          ros-humble-unique-identifier-msgs ros-humble-builtin-interfaces ros-humble-rmw-dds-common
          ros-humble-lifecycle-msgs ros-humble-std-srvs ros-humble-autoware-common-msgs
          ros-humble-system-modes-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rosidl-default-runtime ros-humble-rosidl-default-generators
        ros-humble-unique-identifier-msgs ros-humble-builtin-interfaces ros-humble-rmw-dds-common
        ros-humble-lifecycle-msgs ros-humble-std-srvs ros-humble-autoware-common-msgs
        ros-humble-system-modes-msgs
  stage_17_job_28:
    name: action-msgs rmw-fastrtps-shared-cpp rmw-connextdds-common rmw-cyclonedds-cpp
      rcl-interfaces std-msgs statistics-msgs rosgraph-msgs controller-manager-msgs
      rosbag2-interfaces
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_16_job_27
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-action-msgs ros-humble-rmw-fastrtps-shared-cpp
          ros-humble-rmw-connextdds-common ros-humble-rmw-cyclonedds-cpp ros-humble-rcl-interfaces
          ros-humble-std-msgs ros-humble-statistics-msgs ros-humble-rosgraph-msgs
          ros-humble-controller-manager-msgs ros-humble-rosbag2-interfaces
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-action-msgs ros-humble-rmw-fastrtps-shared-cpp ros-humble-rmw-connextdds-common
        ros-humble-rmw-cyclonedds-cpp ros-humble-rcl-interfaces ros-humble-std-msgs
        ros-humble-statistics-msgs ros-humble-rosgraph-msgs ros-humble-controller-manager-msgs
        ros-humble-rosbag2-interfaces
  stage_17_job_29:
    name: topic-tools-interfaces rosbridge-msgs autoware-internal-metric-msgs robot-controllers-msgs
      pendulum-msgs data-tamer-msgs autoware-utils-uuid autoware-control-msgs
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_16_job_27
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-topic-tools-interfaces ros-humble-rosbridge-msgs
          ros-humble-autoware-internal-metric-msgs ros-humble-robot-controllers-msgs
          ros-humble-pendulum-msgs ros-humble-data-tamer-msgs ros-humble-autoware-utils-uuid
          ros-humble-autoware-control-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-topic-tools-interfaces ros-humble-rosbridge-msgs ros-humble-autoware-internal-metric-msgs
        ros-humble-robot-controllers-msgs ros-humble-pendulum-msgs ros-humble-data-tamer-msgs
        ros-humble-autoware-utils-uuid ros-humble-autoware-control-msgs
  stage_18_job_30:
    name: test-msgs rmw-connextdds composition-interfaces geometry-msgs actionlib-msgs
      bond rosbag2-storage-mcap-testdata example-interfaces ackermann-msgs ros2cli-test-interfaces
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_17_job_28
    - stage_17_job_29
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-test-msgs ros-humble-rmw-connextdds ros-humble-composition-interfaces
          ros-humble-geometry-msgs ros-humble-actionlib-msgs ros-humble-bond ros-humble-rosbag2-storage-mcap-testdata
          ros-humble-example-interfaces ros-humble-ackermann-msgs ros-humble-ros2cli-test-interfaces
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-test-msgs ros-humble-rmw-connextdds ros-humble-composition-interfaces
        ros-humble-geometry-msgs ros-humble-actionlib-msgs ros-humble-bond ros-humble-rosbag2-storage-mcap-testdata
        ros-humble-example-interfaces ros-humble-ackermann-msgs ros-humble-ros2cli-test-interfaces
  stage_18_job_31:
    name: twist-mux-msgs ur-dashboard-msgs teleop-tools-msgs urg-node-msgs rosapi-msgs
      apriltag-msgs udp-msgs action-tutorials-interfaces autoware-internal-debug-msgs
      rtcm-msgs
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_17_job_28
    - stage_17_job_29
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-twist-mux-msgs ros-humble-ur-dashboard-msgs ros-humble-teleop-tools-msgs
          ros-humble-urg-node-msgs ros-humble-rosapi-msgs ros-humble-apriltag-msgs
          ros-humble-udp-msgs ros-humble-action-tutorials-interfaces ros-humble-autoware-internal-debug-msgs
          ros-humble-rtcm-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-twist-mux-msgs ros-humble-ur-dashboard-msgs ros-humble-teleop-tools-msgs
        ros-humble-urg-node-msgs ros-humble-rosapi-msgs ros-humble-apriltag-msgs ros-humble-udp-msgs
        ros-humble-action-tutorials-interfaces ros-humble-autoware-internal-debug-msgs
        ros-humble-rtcm-msgs
  stage_18_job_32:
    name: nmea-msgs stubborn-buddies-msgs plotjuggler-msgs
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_17_job_28
    - stage_17_job_29
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-nmea-msgs ros-humble-stubborn-buddies-msgs ros-humble-plotjuggler-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-nmea-msgs ros-humble-stubborn-buddies-msgs ros-humble-plotjuggler-msgs
  stage_19_job_33:
    name: rmw-fastrtps-dynamic-cpp rmw-fastrtps-cpp sensor-msgs rosidl-runtime-py
      tf2 tf2-msgs shape-msgs trajectory-msgs octomap-msgs nav-msgs
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_18_job_30
    - stage_18_job_31
    - stage_18_job_32
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rmw-fastrtps-dynamic-cpp ros-humble-rmw-fastrtps-cpp
          ros-humble-sensor-msgs ros-humble-rosidl-runtime-py ros-humble-tf2 ros-humble-tf2-msgs
          ros-humble-shape-msgs ros-humble-trajectory-msgs ros-humble-octomap-msgs
          ros-humble-nav-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rmw-fastrtps-dynamic-cpp ros-humble-rmw-fastrtps-cpp
        ros-humble-sensor-msgs ros-humble-rosidl-runtime-py ros-humble-tf2 ros-humble-tf2-msgs
        ros-humble-shape-msgs ros-humble-trajectory-msgs ros-humble-octomap-msgs ros-humble-nav-msgs
  stage_19_job_34:
    name: diagnostic-msgs nav-2d-msgs vision-msgs geographic-msgs ros-gz-interfaces
      autoware-perception-msgs ur-msgs cartographer-ros-msgs turtlebot3-msgs graph-msgs
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_18_job_30
    - stage_18_job_31
    - stage_18_job_32
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-diagnostic-msgs ros-humble-nav-2d-msgs ros-humble-vision-msgs
          ros-humble-geographic-msgs ros-humble-ros-gz-interfaces ros-humble-autoware-perception-msgs
          ros-humble-ur-msgs ros-humble-cartographer-ros-msgs ros-humble-turtlebot3-msgs
          ros-humble-graph-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-diagnostic-msgs ros-humble-nav-2d-msgs ros-humble-vision-msgs
        ros-humble-geographic-msgs ros-humble-ros-gz-interfaces ros-humble-autoware-perception-msgs
        ros-humble-ur-msgs ros-humble-cartographer-ros-msgs ros-humble-turtlebot3-msgs
        ros-humble-graph-msgs
  stage_19_job_35:
    name: autoware-v2x-msgs autoware-sensing-msgs autoware-localization-msgs marker-msgs
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_18_job_30
    - stage_18_job_31
    - stage_18_job_32
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-autoware-v2x-msgs ros-humble-autoware-sensing-msgs
          ros-humble-autoware-localization-msgs ros-humble-marker-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-autoware-v2x-msgs ros-humble-autoware-sensing-msgs ros-humble-autoware-localization-msgs
        ros-humble-marker-msgs
  stage_20_job_36:
    name: rmw-implementation object-recognition-msgs visualization-msgs stereo-msgs
      sensor-msgs-py map-msgs control-msgs cv-bridge tf2-eigen-kdl dwb-msgs
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_19_job_33
    - stage_19_job_34
    - stage_19_job_35
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rmw-implementation ros-humble-object-recognition-msgs
          ros-humble-visualization-msgs ros-humble-stereo-msgs ros-humble-sensor-msgs-py
          ros-humble-map-msgs ros-humble-control-msgs ros-humble-cv-bridge ros-humble-tf2-eigen-kdl
          ros-humble-dwb-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rmw-implementation ros-humble-object-recognition-msgs
        ros-humble-visualization-msgs ros-humble-stereo-msgs ros-humble-sensor-msgs-py
        ros-humble-map-msgs ros-humble-control-msgs ros-humble-cv-bridge ros-humble-tf2-eigen-kdl
        ros-humble-dwb-msgs
  stage_20_job_37:
    name: gazebo-msgs image-geometry pcl-msgs autoware-planning-msgs ros-ign-interfaces
      autoware-internal-perception-msgs autoware-map-msgs sick-safetyscanners2-interfaces
      geodesy autoware-system-msgs
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_19_job_33
    - stage_19_job_34
    - stage_19_job_35
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-gazebo-msgs ros-humble-image-geometry ros-humble-pcl-msgs
          ros-humble-autoware-planning-msgs ros-humble-ros-ign-interfaces ros-humble-autoware-internal-perception-msgs
          ros-humble-autoware-map-msgs ros-humble-sick-safetyscanners2-interfaces
          ros-humble-geodesy ros-humble-autoware-system-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-gazebo-msgs ros-humble-image-geometry ros-humble-pcl-msgs
        ros-humble-autoware-planning-msgs ros-humble-ros-ign-interfaces ros-humble-autoware-internal-perception-msgs
        ros-humble-autoware-map-msgs ros-humble-sick-safetyscanners2-interfaces ros-humble-geodesy
        ros-humble-autoware-system-msgs
  stage_21_job_38:
    name: rcl moveit-msgs common-interfaces autoware-internal-planning-msgs vision-opencv
      ros-image-to-qimage autoware-vehicle-msgs geographic-info
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_20_job_36
    - stage_20_job_37
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rcl ros-humble-moveit-msgs ros-humble-common-interfaces
          ros-humble-autoware-internal-planning-msgs ros-humble-vision-opencv ros-humble-ros-image-to-qimage
          ros-humble-autoware-vehicle-msgs ros-humble-geographic-info
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rcl ros-humble-moveit-msgs ros-humble-common-interfaces
        ros-humble-autoware-internal-planning-msgs ros-humble-vision-opencv ros-humble-ros-image-to-qimage
        ros-humble-autoware-vehicle-msgs ros-humble-geographic-info
  stage_22_job_39:
    name: rcl-lifecycle rcl-action libstatistics-collector autoware-internal-msgs
      rclpy rclcpp
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_21_job_38
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rcl-lifecycle ros-humble-rcl-action ros-humble-libstatistics-collector
          ros-humble-autoware-internal-msgs ros-humble-rclpy ros-humble-rclcpp
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rcl-lifecycle ros-humble-rcl-action ros-humble-libstatistics-collector
        ros-humble-autoware-internal-msgs ros-humble-rclpy ros-humble-rclcpp
  stage_23_job_40:
    name: launch-ros rclcpp-lifecycle ros2cli rclcpp-components rclcpp-action tf2-py
      rsl urdfdom-py geometric-shapes launch-param-builder
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_22_job_39
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-launch-ros ros-humble-rclcpp-lifecycle ros-humble-ros2cli
          ros-humble-rclcpp-components ros-humble-rclcpp-action ros-humble-tf2-py
          ros-humble-rsl ros-humble-urdfdom-py ros-humble-geometric-shapes ros-humble-launch-param-builder
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-launch-ros ros-humble-rclcpp-lifecycle ros-humble-ros2cli
        ros-humble-rclcpp-components ros-humble-rclcpp-action ros-humble-tf2-py ros-humble-rsl
        ros-humble-urdfdom-py ros-humble-geometric-shapes ros-humble-launch-param-builder
  stage_23_job_41:
    name: rosbag2-test-common laser-geometry filters behaviortree-cpp-v3 rqt-gui camera-calibration-parsers
      rqt-py-common rosbridge-test-msgs hls-lfcd-lds-driver rqt-gui-cpp
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_22_job_39
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rosbag2-test-common ros-humble-laser-geometry
          ros-humble-filters ros-humble-behaviortree-cpp-v3 ros-humble-rqt-gui ros-humble-camera-calibration-parsers
          ros-humble-rqt-py-common ros-humble-rosbridge-test-msgs ros-humble-hls-lfcd-lds-driver
          ros-humble-rqt-gui-cpp
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rosbag2-test-common ros-humble-laser-geometry ros-humble-filters
        ros-humble-behaviortree-cpp-v3 ros-humble-rqt-gui ros-humble-camera-calibration-parsers
        ros-humble-rqt-py-common ros-humble-rosbridge-test-msgs ros-humble-hls-lfcd-lds-driver
        ros-humble-rqt-gui-cpp
  stage_23_job_42:
    name: autoware-utils-system cascade-lifecycle-msgs teleop-twist-keyboard dummy-sensors
      dummy-map-server demo-nodes-py io-context quality-of-service-demo-py intra-process-demo
      examples-rclpy-minimal-subscriber
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_22_job_39
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-autoware-utils-system ros-humble-cascade-lifecycle-msgs
          ros-humble-teleop-twist-keyboard ros-humble-dummy-sensors ros-humble-dummy-map-server
          ros-humble-demo-nodes-py ros-humble-io-context ros-humble-quality-of-service-demo-py
          ros-humble-intra-process-demo ros-humble-examples-rclpy-minimal-subscriber
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-autoware-utils-system ros-humble-cascade-lifecycle-msgs
        ros-humble-teleop-twist-keyboard ros-humble-dummy-sensors ros-humble-dummy-map-server
        ros-humble-demo-nodes-py ros-humble-io-context ros-humble-quality-of-service-demo-py
        ros-humble-intra-process-demo ros-humble-examples-rclpy-minimal-subscriber
  stage_23_job_43:
    name: examples-rclpy-minimal-service examples-rclpy-minimal-publisher examples-rclpy-minimal-client
      examples-rclpy-minimal-action-server examples-rclpy-minimal-action-client examples-rclpy-executors
      examples-rclcpp-multithreaded-executor examples-rclcpp-minimal-timer examples-rclcpp-minimal-service
      examples-rclcpp-minimal-publisher
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_22_job_39
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-examples-rclpy-minimal-service ros-humble-examples-rclpy-minimal-publisher
          ros-humble-examples-rclpy-minimal-client ros-humble-examples-rclpy-minimal-action-server
          ros-humble-examples-rclpy-minimal-action-client ros-humble-examples-rclpy-executors
          ros-humble-examples-rclcpp-multithreaded-executor ros-humble-examples-rclcpp-minimal-timer
          ros-humble-examples-rclcpp-minimal-service ros-humble-examples-rclcpp-minimal-publisher
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-examples-rclpy-minimal-service ros-humble-examples-rclpy-minimal-publisher
        ros-humble-examples-rclpy-minimal-client ros-humble-examples-rclpy-minimal-action-server
        ros-humble-examples-rclpy-minimal-action-client ros-humble-examples-rclpy-executors
        ros-humble-examples-rclcpp-multithreaded-executor ros-humble-examples-rclcpp-minimal-timer
        ros-humble-examples-rclcpp-minimal-service ros-humble-examples-rclcpp-minimal-publisher
  stage_23_job_44:
    name: examples-rclcpp-minimal-client action-tutorials-py turtlebot3-teleop turtlebot3-example
      key-teleop autoware-utils-visualization autoware-utils-rclcpp autoware-utils-diagnostics
      py-binding-tools open3d-conversions
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_22_job_39
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-examples-rclcpp-minimal-client ros-humble-action-tutorials-py
          ros-humble-turtlebot3-teleop ros-humble-turtlebot3-example ros-humble-key-teleop
          ros-humble-autoware-utils-visualization ros-humble-autoware-utils-rclcpp
          ros-humble-autoware-utils-diagnostics ros-humble-py-binding-tools ros-humble-open3d-conversions
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-examples-rclcpp-minimal-client ros-humble-action-tutorials-py
        ros-humble-turtlebot3-teleop ros-humble-turtlebot3-example ros-humble-key-teleop
        ros-humble-autoware-utils-visualization ros-humble-autoware-utils-rclcpp ros-humble-autoware-utils-diagnostics
        ros-humble-py-binding-tools ros-humble-open3d-conversions
  stage_23_job_45:
    name: data-tamer-cpp bno055 behaviortree-cpp
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_22_job_39
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-data-tamer-cpp ros-humble-bno055 ros-humble-behaviortree-cpp
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-data-tamer-cpp ros-humble-bno055 ros-humble-behaviortree-cpp
  stage_24_job_46:
    name: launch-testing-ros message-filters tf2-ros-py parameter-traits srdfdom nav2-common
      rosbag2-storage bondcpp hardware-interface realtime-tools
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_23_job_40
    - stage_23_job_41
    - stage_23_job_42
    - stage_23_job_43
    - stage_23_job_44
    - stage_23_job_45
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-launch-testing-ros ros-humble-message-filters
          ros-humble-tf2-ros-py ros-humble-parameter-traits ros-humble-srdfdom ros-humble-nav2-common
          ros-humble-rosbag2-storage ros-humble-bondcpp ros-humble-hardware-interface
          ros-humble-realtime-tools
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-launch-testing-ros ros-humble-message-filters ros-humble-tf2-ros-py
        ros-humble-parameter-traits ros-humble-srdfdom ros-humble-nav2-common ros-humble-rosbag2-storage
        ros-humble-bondcpp ros-humble-hardware-interface ros-humble-realtime-tools
  stage_24_job_47:
    name: kinematics-interface ros2lifecycle-test-fixtures rqt-gui-py joy camera-info-manager
      topic-tools ros2multicast joint-limits laser-proc rosbridge-library
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_23_job_40
    - stage_23_job_41
    - stage_23_job_42
    - stage_23_job_43
    - stage_23_job_44
    - stage_23_job_45
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-kinematics-interface ros-humble-ros2lifecycle-test-fixtures
          ros-humble-rqt-gui-py ros-humble-joy ros-humble-camera-info-manager ros-humble-topic-tools
          ros-humble-ros2multicast ros-humble-joint-limits ros-humble-laser-proc ros-humble-rosbridge-library
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-kinematics-interface ros-humble-ros2lifecycle-test-fixtures
        ros-humble-rqt-gui-py ros-humble-joy ros-humble-camera-info-manager ros-humble-topic-tools
        ros-humble-ros2multicast ros-humble-joint-limits ros-humble-laser-proc ros-humble-rosbridge-library
  stage_24_job_48:
    name: joy-teleop rclc rclcpp-cascade-lifecycle turtlesim topic-monitor quality-of-service-demo-cpp
      examples-rclcpp-minimal-subscriber examples-rclcpp-minimal-composition examples-rclcpp-minimal-action-server
      examples-rclcpp-minimal-action-client
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_23_job_40
    - stage_23_job_41
    - stage_23_job_42
    - stage_23_job_43
    - stage_23_job_44
    - stage_23_job_45
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-joy-teleop ros-humble-rclc ros-humble-rclcpp-cascade-lifecycle
          ros-humble-turtlesim ros-humble-topic-monitor ros-humble-quality-of-service-demo-cpp
          ros-humble-examples-rclcpp-minimal-subscriber ros-humble-examples-rclcpp-minimal-composition
          ros-humble-examples-rclcpp-minimal-action-server ros-humble-examples-rclcpp-minimal-action-client
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-joy-teleop ros-humble-rclc ros-humble-rclcpp-cascade-lifecycle
        ros-humble-turtlesim ros-humble-topic-monitor ros-humble-quality-of-service-demo-cpp
        ros-humble-examples-rclcpp-minimal-subscriber ros-humble-examples-rclcpp-minimal-composition
        ros-humble-examples-rclcpp-minimal-action-server ros-humble-examples-rclcpp-minimal-action-client
  stage_24_job_49:
    name: depthimage-to-laserscan action-tutorials-cpp serial-driver lanelet2-examples
      autoware-utils-debug udp-driver stubborn-buddies spacenav flex-sync
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_23_job_40
    - stage_23_job_41
    - stage_23_job_42
    - stage_23_job_43
    - stage_23_job_44
    - stage_23_job_45
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-depthimage-to-laserscan ros-humble-action-tutorials-cpp
          ros-humble-serial-driver ros-humble-lanelet2-examples ros-humble-autoware-utils-debug
          ros-humble-udp-driver ros-humble-stubborn-buddies ros-humble-spacenav ros-humble-flex-sync
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-depthimage-to-laserscan ros-humble-action-tutorials-cpp
        ros-humble-serial-driver ros-humble-lanelet2-examples ros-humble-autoware-utils-debug
        ros-humble-udp-driver ros-humble-stubborn-buddies ros-humble-spacenav ros-humble-flex-sync
  stage_25_job_50:
    name: ros2topic tf2-ros generate-parameter-library ros2test moveit-configs-utils
      nav2-msgs image-transport rosbag2-storage-mcap rosbag2-storage-default-plugins
      diagnostic-updater
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_24_job_46
    - stage_24_job_47
    - stage_24_job_48
    - stage_24_job_49
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ros2topic ros-humble-tf2-ros ros-humble-generate-parameter-library
          ros-humble-ros2test ros-humble-moveit-configs-utils ros-humble-nav2-msgs
          ros-humble-image-transport ros-humble-rosbag2-storage-mcap ros-humble-rosbag2-storage-default-plugins
          ros-humble-diagnostic-updater
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ros2topic ros-humble-tf2-ros ros-humble-generate-parameter-library
        ros-humble-ros2test ros-humble-moveit-configs-utils ros-humble-nav2-msgs ros-humble-image-transport
        ros-humble-rosbag2-storage-mcap ros-humble-rosbag2-storage-default-plugins
        ros-humble-diagnostic-updater
  stage_25_job_51:
    name: nav2-voxel-grid ros2pkg ros2service ros2node hardware-interface-testing
      controller-interface kinematics-interface-kdl pcl-conversions ros2interface
      ros2doctor
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_24_job_46
    - stage_24_job_47
    - stage_24_job_48
    - stage_24_job_49
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-nav2-voxel-grid ros-humble-ros2pkg ros-humble-ros2service
          ros-humble-ros2node ros-humble-hardware-interface-testing ros-humble-controller-interface
          ros-humble-kinematics-interface-kdl ros-humble-pcl-conversions ros-humble-ros2interface
          ros-humble-ros2doctor
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-nav2-voxel-grid ros-humble-ros2pkg ros-humble-ros2service
        ros-humble-ros2node ros-humble-hardware-interface-testing ros-humble-controller-interface
        ros-humble-kinematics-interface-kdl ros-humble-pcl-conversions ros-humble-ros2interface
        ros-humble-ros2doctor
  stage_25_job_52:
    name: ros2action rqt-console teleop-twist-joy camera-calibration transmission-interface
      tf2-tools rqt-plot ros2-controllers-test-nodes rqt-robot-monitor rqt-topic
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_24_job_46
    - stage_24_job_47
    - stage_24_job_48
    - stage_24_job_49
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ros2action ros-humble-rqt-console ros-humble-teleop-twist-joy
          ros-humble-camera-calibration ros-humble-transmission-interface ros-humble-tf2-tools
          ros-humble-rqt-plot ros-humble-ros2-controllers-test-nodes ros-humble-rqt-robot-monitor
          ros-humble-rqt-topic
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ros2action ros-humble-rqt-console ros-humble-teleop-twist-joy
        ros-humble-camera-calibration ros-humble-transmission-interface ros-humble-tf2-tools
        ros-humble-rqt-plot ros-humble-ros2-controllers-test-nodes ros-humble-rqt-robot-monitor
        ros-humble-rqt-topic
  stage_25_job_53:
    name: rqt-shell rqt-service-caller rqt-py-console rqt-publisher rqt-graph logging-demo
      image-tools demo-nodes-cpp-native demo-nodes-cpp composition
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_24_job_46
    - stage_24_job_47
    - stage_24_job_48
    - stage_24_job_49
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rqt-shell ros-humble-rqt-service-caller ros-humble-rqt-py-console
          ros-humble-rqt-publisher ros-humble-rqt-graph ros-humble-logging-demo ros-humble-image-tools
          ros-humble-demo-nodes-cpp-native ros-humble-demo-nodes-cpp ros-humble-composition
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rqt-shell ros-humble-rqt-service-caller ros-humble-rqt-py-console
        ros-humble-rqt-publisher ros-humble-rqt-graph ros-humble-logging-demo ros-humble-image-tools
        ros-humble-demo-nodes-cpp-native ros-humble-demo-nodes-cpp ros-humble-composition
  stage_25_job_54:
    name: rqt-image-overlay-layer rqt-robot-steering teleop-tools rqt lanelet2 bond-core
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_24_job_46
    - stage_24_job_47
    - stage_24_job_48
    - stage_24_job_49
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rqt-image-overlay-layer ros-humble-rqt-robot-steering
          ros-humble-teleop-tools ros-humble-rqt ros-humble-lanelet2 ros-humble-bond-core
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rqt-image-overlay-layer ros-humble-rqt-robot-steering
        ros-humble-teleop-tools ros-humble-rqt ros-humble-lanelet2 ros-humble-bond-core
  stage_26_job_55:
    name: joint-state-publisher robot-state-publisher tf2-kdl tf2-geometry-msgs tf2-eigen
      ros-testing rosbag2-cpp tf2-sensor-msgs ros2run ros2param
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_25_job_50
    - stage_25_job_51
    - stage_25_job_52
    - stage_25_job_53
    - stage_25_job_54
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-joint-state-publisher ros-humble-robot-state-publisher
          ros-humble-tf2-kdl ros-humble-tf2-geometry-msgs ros-humble-tf2-eigen ros-humble-ros-testing
          ros-humble-rosbag2-cpp ros-humble-tf2-sensor-msgs ros-humble-ros2run ros-humble-ros2param
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-joint-state-publisher ros-humble-robot-state-publisher
        ros-humble-tf2-kdl ros-humble-tf2-geometry-msgs ros-humble-tf2-eigen ros-humble-ros-testing
        ros-humble-rosbag2-cpp ros-humble-tf2-sensor-msgs ros-humble-ros2run ros-humble-ros2param
  stage_26_job_56:
    name: control-toolbox ros2launch theora-image-transport compressed-image-transport
      compressed-depth-image-transport nav2-simple-commander image-proc ros2lifecycle
      twist-mux image-view
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_25_job_50
    - stage_25_job_51
    - stage_25_job_52
    - stage_25_job_53
    - stage_25_job_54
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-control-toolbox ros-humble-ros2launch ros-humble-theora-image-transport
          ros-humble-compressed-image-transport ros-humble-compressed-depth-image-transport
          ros-humble-nav2-simple-commander ros-humble-image-proc ros-humble-ros2lifecycle
          ros-humble-twist-mux ros-humble-image-view
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-control-toolbox ros-humble-ros2launch ros-humble-theora-image-transport
        ros-humble-compressed-image-transport ros-humble-compressed-depth-image-transport
        ros-humble-nav2-simple-commander ros-humble-image-proc ros-humble-ros2lifecycle
        ros-humble-twist-mux ros-humble-image-view
  stage_26_job_57:
    name: image-publisher tf2-bullet rqt-msg urg-node rqt-reconfigure rqt-image-view
      turtlebot3-node image-common robot-controllers-interface autoware-utils-logging
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_25_job_50
    - stage_25_job_51
    - stage_25_job_52
    - stage_25_job_53
    - stage_25_job_54
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-image-publisher ros-humble-tf2-bullet ros-humble-rqt-msg
          ros-humble-urg-node ros-humble-rqt-reconfigure ros-humble-rqt-image-view
          ros-humble-turtlebot3-node ros-humble-image-common ros-humble-robot-controllers-interface
          ros-humble-autoware-utils-logging
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-image-publisher ros-humble-tf2-bullet ros-humble-rqt-msg
        ros-humble-urg-node ros-humble-rqt-reconfigure ros-humble-rqt-image-view ros-humble-turtlebot3-node
        ros-humble-image-common ros-humble-robot-controllers-interface ros-humble-autoware-utils-logging
  stage_26_job_58:
    name: apriltag-draw apriltag-detector turtle-tf2-py rqt-robot-dashboard rqt-moveit
      apriltag-ros
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_25_job_50
    - stage_25_job_51
    - stage_25_job_52
    - stage_25_job_53
    - stage_25_job_54
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-apriltag-draw ros-humble-apriltag-detector ros-humble-turtle-tf2-py
          ros-humble-rqt-robot-dashboard ros-humble-rqt-moveit ros-humble-apriltag-ros
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-apriltag-draw ros-humble-apriltag-detector ros-humble-turtle-tf2-py
        ros-humble-rqt-robot-dashboard ros-humble-rqt-moveit ros-humble-apriltag-ros
  stage_27_job_59:
    name: joint-state-publisher-gui rviz-common interactive-markers moveit-resources-fanuc-moveit-config
      nav2-util warehouse-ros rosbag2-compression controller-manager gazebo-ros image-transport-plugins
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_26_job_55
    - stage_26_job_56
    - stage_26_job_57
    - stage_26_job_58
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-joint-state-publisher-gui ros-humble-rviz-common
          ros-humble-interactive-markers ros-humble-moveit-resources-fanuc-moveit-config
          ros-humble-nav2-util ros-humble-warehouse-ros ros-humble-rosbag2-compression
          ros-humble-controller-manager ros-humble-gazebo-ros ros-humble-image-transport-plugins
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-joint-state-publisher-gui ros-humble-rviz-common ros-humble-interactive-markers
        ros-humble-moveit-resources-fanuc-moveit-config ros-humble-nav2-util ros-humble-warehouse-ros
        ros-humble-rosbag2-compression ros-humble-controller-manager ros-humble-gazebo-ros
        ros-humble-image-transport-plugins
  stage_27_job_60:
    name: sros2 ros2component robot-localization stereo-image-proc image-rotate depth-image-proc
      pcl-ros laser-filters rosapi geometry2
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_26_job_55
    - stage_26_job_56
    - stage_26_job_57
    - stage_26_job_58
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-sros2 ros-humble-ros2component ros-humble-robot-localization
          ros-humble-stereo-image-proc ros-humble-image-rotate ros-humble-depth-image-proc
          ros-humble-pcl-ros ros-humble-laser-filters ros-humble-rosapi ros-humble-geometry2
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-sros2 ros-humble-ros2component ros-humble-robot-localization
        ros-humble-stereo-image-proc ros-humble-image-rotate ros-humble-depth-image-proc
        ros-humble-pcl-ros ros-humble-laser-filters ros-humble-rosapi ros-humble-geometry2
  stage_27_job_61:
    name: rqt-srv rqt-action autoware-utils-geometry cartographer-ros lifecycle dummy-robot-bringup
      turtlebot3-fake-node system-modes turtle-tf2-cpp rqt-image-overlay
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_26_job_55
    - stage_26_job_56
    - stage_26_job_57
    - stage_26_job_58
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rqt-srv ros-humble-rqt-action ros-humble-autoware-utils-geometry
          ros-humble-cartographer-ros ros-humble-lifecycle ros-humble-dummy-robot-bringup
          ros-humble-turtlebot3-fake-node ros-humble-system-modes ros-humble-turtle-tf2-cpp
          ros-humble-rqt-image-overlay
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rqt-srv ros-humble-rqt-action ros-humble-autoware-utils-geometry
        ros-humble-cartographer-ros ros-humble-lifecycle ros-humble-dummy-robot-bringup
        ros-humble-turtlebot3-fake-node ros-humble-system-modes ros-humble-turtle-tf2-cpp
        ros-humble-rqt-image-overlay
  stage_27_job_62:
    name: robot-controllers apriltag-detector-umich apriltag-detector-mit
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_26_job_55
    - stage_26_job_56
    - stage_26_job_57
    - stage_26_job_58
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-robot-controllers ros-humble-apriltag-detector-umich
          ros-humble-apriltag-detector-mit
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-robot-controllers ros-humble-apriltag-detector-umich
        ros-humble-apriltag-detector-mit
  stage_28_job_63:
    name: moveit-resources-panda-moveit-config rviz-visual-testing-framework nav2-map-server
      nav2-lifecycle-manager rosbag2-compression-zstd nav-2d-utils forward-command-controller
      steering-controllers-library joint-trajectory-controller nav2-behavior-tree
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_27_job_59
    - stage_27_job_60
    - stage_27_job_61
    - stage_27_job_62
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-resources-panda-moveit-config ros-humble-rviz-visual-testing-framework
          ros-humble-nav2-map-server ros-humble-nav2-lifecycle-manager ros-humble-rosbag2-compression-zstd
          ros-humble-nav-2d-utils ros-humble-forward-command-controller ros-humble-steering-controllers-library
          ros-humble-joint-trajectory-controller ros-humble-nav2-behavior-tree
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-resources-panda-moveit-config ros-humble-rviz-visual-testing-framework
        ros-humble-nav2-map-server ros-humble-nav2-lifecycle-manager ros-humble-rosbag2-compression-zstd
        ros-humble-nav-2d-utils ros-humble-forward-command-controller ros-humble-steering-controllers-library
        ros-humble-joint-trajectory-controller ros-humble-nav2-behavior-tree
  stage_28_job_64:
    name: tricycle-controller range-sensor-broadcaster pose-broadcaster pid-controller
      mecanum-drive-controller joint-state-broadcaster imu-sensor-broadcaster gripper-controllers
      gpio-controllers force-torque-sensor-broadcaster
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_27_job_59
    - stage_27_job_60
    - stage_27_job_61
    - stage_27_job_62
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-tricycle-controller ros-humble-range-sensor-broadcaster
          ros-humble-pose-broadcaster ros-humble-pid-controller ros-humble-mecanum-drive-controller
          ros-humble-joint-state-broadcaster ros-humble-imu-sensor-broadcaster ros-humble-gripper-controllers
          ros-humble-gpio-controllers ros-humble-force-torque-sensor-broadcaster
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-tricycle-controller ros-humble-range-sensor-broadcaster
        ros-humble-pose-broadcaster ros-humble-pid-controller ros-humble-mecanum-drive-controller
        ros-humble-joint-state-broadcaster ros-humble-imu-sensor-broadcaster ros-humble-gripper-controllers
        ros-humble-gpio-controllers ros-humble-force-torque-sensor-broadcaster
  stage_28_job_65:
    name: diff-drive-controller admittance-controller nav2-velocity-smoother nav2-amcl
      ros2controlcli sros2-cmake ros2cli-common-extensions gazebo-ros2-control image-pipeline
      gazebo-plugins
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_27_job_59
    - stage_27_job_60
    - stage_27_job_61
    - stage_27_job_62
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-diff-drive-controller ros-humble-admittance-controller
          ros-humble-nav2-velocity-smoother ros-humble-nav2-amcl ros-humble-ros2controlcli
          ros-humble-sros2-cmake ros-humble-ros2cli-common-extensions ros-humble-gazebo-ros2-control
          ros-humble-image-pipeline ros-humble-gazebo-plugins
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-diff-drive-controller ros-humble-admittance-controller
        ros-humble-nav2-velocity-smoother ros-humble-nav2-amcl ros-humble-ros2controlcli
        ros-humble-sros2-cmake ros-humble-ros2cli-common-extensions ros-humble-gazebo-ros2-control
        ros-humble-image-pipeline ros-humble-gazebo-plugins
  stage_28_job_66:
    name: warehouse-ros-sqlite rosbridge-server perception-pcl autoware-utils-tf velodyne-gazebo-plugins
      turtlebot3-cartographer rqt-controller-manager rosbag2-performance-benchmarking
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_27_job_59
    - stage_27_job_60
    - stage_27_job_61
    - stage_27_job_62
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-warehouse-ros-sqlite ros-humble-rosbridge-server
          ros-humble-perception-pcl ros-humble-autoware-utils-tf ros-humble-velodyne-gazebo-plugins
          ros-humble-turtlebot3-cartographer ros-humble-rqt-controller-manager ros-humble-rosbag2-performance-benchmarking
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-warehouse-ros-sqlite ros-humble-rosbridge-server ros-humble-perception-pcl
        ros-humble-autoware-utils-tf ros-humble-velodyne-gazebo-plugins ros-humble-turtlebot3-cartographer
        ros-humble-rqt-controller-manager ros-humble-rosbag2-performance-benchmarking
  stage_29_job_67:
    name: moveit-core rviz-default-plugins nav2-costmap-2d rosbag2-transport velocity-controllers
      tricycle-steering-controller position-controllers effort-controllers bicycle-steering-controller
      ackermann-steering-controller
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_28_job_63
    - stage_28_job_64
    - stage_28_job_65
    - stage_28_job_66
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-core ros-humble-rviz-default-plugins ros-humble-nav2-costmap-2d
          ros-humble-rosbag2-transport ros-humble-velocity-controllers ros-humble-tricycle-steering-controller
          ros-humble-position-controllers ros-humble-effort-controllers ros-humble-bicycle-steering-controller
          ros-humble-ackermann-steering-controller
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-core ros-humble-rviz-default-plugins ros-humble-nav2-costmap-2d
        ros-humble-rosbag2-transport ros-humble-velocity-controllers ros-humble-tricycle-steering-controller
        ros-humble-position-controllers ros-humble-effort-controllers ros-humble-bicycle-steering-controller
        ros-humble-ackermann-steering-controller
  stage_29_job_68:
    name: ur-controllers ros2-control ros-core gazebo-ros-pkgs autoware-utils-pcl
      velodyne-simulator rosbridge-suite moveit-resources aws-robomaker-small-warehouse-world
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_28_job_63
    - stage_28_job_64
    - stage_28_job_65
    - stage_28_job_66
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-ur-controllers ros-humble-ros2-control ros-humble-ros-core
          ros-humble-gazebo-ros-pkgs ros-humble-autoware-utils-pcl ros-humble-velodyne-simulator
          ros-humble-rosbridge-suite ros-humble-moveit-resources ros-humble-aws-robomaker-small-warehouse-world
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-ur-controllers ros-humble-ros2-control ros-humble-ros-core
        ros-humble-gazebo-ros-pkgs ros-humble-autoware-utils-pcl ros-humble-velodyne-simulator
        ros-humble-rosbridge-suite ros-humble-moveit-resources ros-humble-aws-robomaker-small-warehouse-world
  stage_30_job_69:
    name: moveit-ros-occupancy-map-monitor rviz2 moveit-simple-controller-manager
      moveit-resources-prbt-ikfast-manipulator-plugin nav2-core costmap-queue pilz-industrial-motion-planner-testutils
      chomp-motion-planner rosbag2-py nav2-rviz-plugins
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_29_job_67
    - stage_29_job_68
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-ros-occupancy-map-monitor ros-humble-rviz2
          ros-humble-moveit-simple-controller-manager ros-humble-moveit-resources-prbt-ikfast-manipulator-plugin
          ros-humble-nav2-core ros-humble-costmap-queue ros-humble-pilz-industrial-motion-planner-testutils
          ros-humble-chomp-motion-planner ros-humble-rosbag2-py ros-humble-nav2-rviz-plugins
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-ros-occupancy-map-monitor ros-humble-rviz2 ros-humble-moveit-simple-controller-manager
        ros-humble-moveit-resources-prbt-ikfast-manipulator-plugin ros-humble-nav2-core
        ros-humble-costmap-queue ros-humble-pilz-industrial-motion-planner-testutils
        ros-humble-chomp-motion-planner ros-humble-rosbag2-py ros-humble-nav2-rviz-plugins
  stage_30_job_70:
    name: nav2-collision-monitor ros2-controllers slam-toolbox turtlebot3-gazebo gazebo-ros2-control-demos
      autoware-utils apriltag-tools
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_29_job_67
    - stage_29_job_68
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-nav2-collision-monitor ros-humble-ros2-controllers
          ros-humble-slam-toolbox ros-humble-turtlebot3-gazebo ros-humble-gazebo-ros2-control-demos
          ros-humble-autoware-utils ros-humble-apriltag-tools
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-nav2-collision-monitor ros-humble-ros2-controllers ros-humble-slam-toolbox
        ros-humble-turtlebot3-gazebo ros-humble-gazebo-ros2-control-demos ros-humble-autoware-utils
        ros-humble-apriltag-tools
  stage_31_job_71:
    name: moveit-ros-planning dwb-core nav2-regulated-pure-pursuit-controller nav2-controller
      moveit-planners-chomp ros2bag ur-description nav2-waypoint-follower nav2-theta-star-planner
      nav2-smoother
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_30_job_69
    - stage_30_job_70
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-ros-planning ros-humble-dwb-core ros-humble-nav2-regulated-pure-pursuit-controller
          ros-humble-nav2-controller ros-humble-moveit-planners-chomp ros-humble-ros2bag
          ros-humble-ur-description ros-humble-nav2-waypoint-follower ros-humble-nav2-theta-star-planner
          ros-humble-nav2-smoother
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-ros-planning ros-humble-dwb-core ros-humble-nav2-regulated-pure-pursuit-controller
        ros-humble-nav2-controller ros-humble-moveit-planners-chomp ros-humble-ros2bag
        ros-humble-ur-description ros-humble-nav2-waypoint-follower ros-humble-nav2-theta-star-planner
        ros-humble-nav2-smoother
  stage_31_job_72:
    name: nav2-smac-planner nav2-planner nav2-navfn-planner nav2-mppi-controller nav2-constrained-smoother
      nav2-bt-navigator nav2-behaviors moveit-plugins rqt-bag moveit-ros-control-interface
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_30_job_69
    - stage_30_job_70
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-nav2-smac-planner ros-humble-nav2-planner ros-humble-nav2-navfn-planner
          ros-humble-nav2-mppi-controller ros-humble-nav2-constrained-smoother ros-humble-nav2-bt-navigator
          ros-humble-nav2-behaviors ros-humble-moveit-plugins ros-humble-rqt-bag ros-humble-moveit-ros-control-interface
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-nav2-smac-planner ros-humble-nav2-planner ros-humble-nav2-navfn-planner
        ros-humble-nav2-mppi-controller ros-humble-nav2-constrained-smoother ros-humble-nav2-bt-navigator
        ros-humble-nav2-behaviors ros-humble-moveit-plugins ros-humble-rqt-bag ros-humble-moveit-ros-control-interface
  stage_31_job_73:
    name: rviz-visual-tools urdf-launch turtlebot3-manipulation-gazebo turtlebot3-bringup
      vision-msgs-rviz-plugins sick-safetyscanners2 moveit-chomp-optimizer-adapter
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_30_job_69
    - stage_30_job_70
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-rviz-visual-tools ros-humble-urdf-launch ros-humble-turtlebot3-manipulation-gazebo
          ros-humble-turtlebot3-bringup ros-humble-vision-msgs-rviz-plugins ros-humble-sick-safetyscanners2
          ros-humble-moveit-chomp-optimizer-adapter
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-rviz-visual-tools ros-humble-urdf-launch ros-humble-turtlebot3-manipulation-gazebo
        ros-humble-turtlebot3-bringup ros-humble-vision-msgs-rviz-plugins ros-humble-sick-safetyscanners2
        ros-humble-moveit-chomp-optimizer-adapter
  stage_32_job_74:
    name: moveit-kinematics moveit-ros-warehouse moveit-planners-ompl moveit-ros-robot-interaction
      dwb-plugins dwb-critics nav2-rotation-shim-controller rosbag2-tests ur-robot-driver
      moveit-visual-tools
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_31_job_71
    - stage_31_job_72
    - stage_31_job_73
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-kinematics ros-humble-moveit-ros-warehouse
          ros-humble-moveit-planners-ompl ros-humble-moveit-ros-robot-interaction
          ros-humble-dwb-plugins ros-humble-dwb-critics ros-humble-nav2-rotation-shim-controller
          ros-humble-rosbag2-tests ros-humble-ur-robot-driver ros-humble-moveit-visual-tools
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-kinematics ros-humble-moveit-ros-warehouse ros-humble-moveit-planners-ompl
        ros-humble-moveit-ros-robot-interaction ros-humble-dwb-plugins ros-humble-dwb-critics
        ros-humble-nav2-rotation-shim-controller ros-humble-rosbag2-tests ros-humble-ur-robot-driver
        ros-humble-moveit-visual-tools
  stage_32_job_75:
    name: urdf-tutorial turtlebot3-simulations
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_31_job_71
    - stage_31_job_72
    - stage_31_job_73
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-urdf-tutorial ros-humble-turtlebot3-simulations
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-urdf-tutorial ros-humble-turtlebot3-simulations
  stage_33_job_76:
    name: moveit-ros-move-group moveit-ros-benchmarks nav2-dwb-controller rosbag2
      ur-calibration
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_32_job_74
    - stage_32_job_75
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-ros-move-group ros-humble-moveit-ros-benchmarks
          ros-humble-nav2-dwb-controller ros-humble-rosbag2 ros-humble-ur-calibration
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-ros-move-group ros-humble-moveit-ros-benchmarks
        ros-humble-nav2-dwb-controller ros-humble-rosbag2 ros-humble-ur-calibration
  stage_34_job_77:
    name: moveit-ros-planning-interface moveit-resources-prbt-moveit-config navigation2
      rqt-bag-plugins ros-base
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_33_job_76
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-ros-planning-interface ros-humble-moveit-resources-prbt-moveit-config
          ros-humble-navigation2 ros-humble-rqt-bag-plugins ros-humble-ros-base
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-ros-planning-interface ros-humble-moveit-resources-prbt-moveit-config
        ros-humble-navigation2 ros-humble-rqt-bag-plugins ros-humble-ros-base
  stage_35_job_78:
    name: moveit-ros-visualization moveit-resources-prbt-pg70-support nav2-bringup
      moveit-servo rqt-common-plugins simulation perception
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_34_job_77
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-ros-visualization ros-humble-moveit-resources-prbt-pg70-support
          ros-humble-nav2-bringup ros-humble-moveit-servo ros-humble-rqt-common-plugins
          ros-humble-simulation ros-humble-perception
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-ros-visualization ros-humble-moveit-resources-prbt-pg70-support
        ros-humble-nav2-bringup ros-humble-moveit-servo ros-humble-rqt-common-plugins
        ros-humble-simulation ros-humble-perception
  stage_36_job_79:
    name: moveit-setup-framework pilz-industrial-motion-planner moveit-ros ur-moveit-config
      turtlebot3-navigation2 desktop
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_35_job_78
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-setup-framework ros-humble-pilz-industrial-motion-planner
          ros-humble-moveit-ros ros-humble-ur-moveit-config ros-humble-turtlebot3-navigation2
          ros-humble-desktop
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-setup-framework ros-humble-pilz-industrial-motion-planner
        ros-humble-moveit-ros ros-humble-ur-moveit-config ros-humble-turtlebot3-navigation2
        ros-humble-desktop
  stage_37_job_80:
    name: moveit-setup-core-plugins moveit-setup-controllers moveit-setup-app-plugins
      moveit-setup-srdf-plugins moveit-planners ur turtlebot3 desktop-full moveit-setup-assistant
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_36_job_79
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit-setup-core-plugins ros-humble-moveit-setup-controllers
          ros-humble-moveit-setup-app-plugins ros-humble-moveit-setup-srdf-plugins
          ros-humble-moveit-planners ros-humble-ur ros-humble-turtlebot3 ros-humble-desktop-full
          ros-humble-moveit-setup-assistant
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit-setup-core-plugins ros-humble-moveit-setup-controllers
        ros-humble-moveit-setup-app-plugins ros-humble-moveit-setup-srdf-plugins ros-humble-moveit-planners
        ros-humble-ur ros-humble-turtlebot3 ros-humble-desktop-full ros-humble-moveit-setup-assistant
  stage_38_job_81:
    name: moveit
    runs-on: windows-2022
    strategy:
      fail-fast: false
    needs:
    - stage_37_job_80
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.10
      with:
        pixi-version: v0.40.3
        cache: 'true'
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=true"

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run -v rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c conda-forge -c robostack-staging ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        :: Check if .conda files exist in the win-64 directory
        dir /b "%CONDA_BLD_PATH%\win-64\*.conda" >nul 2>&1
        if errorlevel 1 (
            :: No files found, display warning
            echo Warning: No .conda files found in %CONDA_BLD_PATH%\win-64
            echo This might be due to all the packages being skipped
        ) else (
            :: Files found, run the upload command
            pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
            if errorlevel 1 exit 1
        )
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-humble-moveit
        PYTHONUNBUFFERED: 1
      name: Build ros-humble-moveit
name: build_win
on:
  push:
    branches:
    - buildbranch_win
